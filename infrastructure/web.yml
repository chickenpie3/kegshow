Description: Web distribution

Parameters:
  DomainName:
    Type: String
    Default: kegshow.com

  HostedZoneName:
    Type: String
    Default: kegshow.com.

  CertificateArn:
    Type: String
    Default: arn:aws:acm:us-east-1:658441137578:certificate/5f4993be-b247-477e-ac40-a5426cc8087b

Outputs:
  DistributionId:
    Description: CloudFront distribution id
    Value: !Ref Distribution

  BucketName:
    Description: Static web bucket name
    Value: !Ref Bucket

Resources:

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: kegshow-web-prd

  AccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Provides access from cloudfront to web bucket'

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Id: "PolicyForCloudFrontPrivateContent"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${AccessIdentity}"
            Action: "s3:GetObject"
            Resource: !Sub "${Bucket.Arn}/*"

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub Kegshow production
        DefaultCacheBehavior:
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # Caching disabled
          TargetOriginId: s3-origin
          ViewerProtocolPolicy: allow-all
        DefaultRootObject: index.html
        Enabled: true
        Origins:
          - DomainName: !Sub ${Bucket}.s3.us-east-1.amazonaws.com
            Id: s3-origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${AccessIdentity}"
        Aliases: [!Ref DomainName]
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only
        CustomErrorResponses:
          # Paths handled by the Vue router dont actually exist, so they cause these errors
          # Responding with index.html allows the router to handle the path
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 10
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 10

  WebDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone id
      HostedZoneName: !Ref HostedZoneName
      Name: !Ref DomainName
      Type: A
